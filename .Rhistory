library(swirl)
install_from_swirl("R Programming")
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
flags(class)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_list<-sapply(flags,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags,unique)
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
unique_vals<-sapply(flags,unique)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
rm(list=ls())
ls()
library(datasets)
data(iris)
?iris
?lapply
lapply(Sepal.Length,mean)
lapply(iris$Sepal.Length],mean)
lapply(iris,mean)
tapply(iris,iris$species,mean)
apply(iris,iris$species,mean)
?apply
apply(iris$Sepal.Length,iris$Species,mean)
dim(iris$Species)
iris$Species
iris$Sepal.Length
apply(iris$Sepal.Length,iris$Species,mean)
x<-split(iris$Species)
?split
?apply
?split
sapply(split(iris$Sepal.Length,iris$Species),mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
ls()
rm(list=ls())
ls()
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg, mtcars$cyl)
lapply(mtcars, mean)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429- 82.63636
debug(ls)
ls()
?debug
ls()
ls()
ls()
debug()
ls()
help "<<-"
?<<-
??<<-
?numeric
?mean
ls()
source("makevector.R")
cachemean(makevector)
h <-makevector()
h <-makevector(o)
vec<-c(1,2,3,4,5)
x=mean(vec)
x
h <-makevector(x)
cachemean(makeVector())
m
source("makevector.R")
cachemean(makeVector())
source("makevector.R")
cachemean(makeVector())
h <- makeVector()
cachemean(h)
h <- 5
cachemean(h)
makeVector
makeVetor()
makeVector()
h <-makeVector()
h
h$setmean(3.14)
cachemean(h)
ls()
rm(list=ls())
source("makevector.R")
h <-makeVector()
h
h$setmean(3.14)
h
h$getmean()
h$get()
h$set(500)
h$get()
h$set("apple")
h$get()
h$setmean("apple")
h$getmean()
h$setmean(NA)
h$getmean()
h$setmean(is.null(TRUE))
h$getmean()
h$setmean(is.null())
h$setmean(is.null(0))
h$getmean()
h$setmean(is.null(1))
h$getmean()
h$setmean(is.null(NULL))
h$getmean()
vec <- makeVector(23)
cachemean(vec)
vec()
vec
vec$getmean()
rm(list=ls())
vec
vec <- makeVector(23)
source("makevector.R")
vec <- makeVector(23)
vec$getmean()
vec$get()
rm(list=ls())
source("makevector.R")
vec <- makeVector(c(1,3,5,7,9))
vec$get()
vec$getmean()
cachemean(vec)
vec$getmean()
foo()
foo()
vec <- makeVector(c(3,6,9,12,15,18))
vec$getmean()
cachemean(vec)
vec$getmean()
vec$get()
vec$get()<-vec$get() + 5
vec$set()<-vec$get() + 5
vec <- vec+ 5
vec$get()
v2<-vec$get()+5
v2
A<c(1,2,3,4,5,6,7,8,9, nrow=3,ncol=3)
?matrix
A<matrix(c(1,2,3,4,5,6,7,8,9), nrow=3,ncol=3)
A<-matrix(c(1,2,3,4,5,6,7,8,9), nrow=3,ncol=3)
A
inv(A)
?solve
solve(A)
A
A<-matrix(c(1,1,1,1,2,1,1,1,3), nrow=3,ncol=3)
A
solve(A)
Ainv<-solve(A)
Ainv
solve(Ainv)
rm(list=ls())
source("makeMatrix.R")
A<-matrix(c(1,1,1,1,2,1,1,1,3), nrow=3,ncol=3)
A
xmat <- makeVector(A)
xmat <- makeMatrix(A)
xmat
xmat$get()
cacheinv(xmat)
xmat <- makeMatrix(A)
xmat
xmat$get()
cacheinv(xmat)
source("makeMatrix.R")
xmat <- makeMatrix(A)
xmat
xmat$get()
cacheinv(xmat)
source("makeMatrix.R")
xmat
xmat$get()
cacheinv(xmat)
xmat$getinv()
xmat$get()
xmat$getinv()
xmat$get()
xmat$getinv()
A<-matrix(c(2,2,2,1,2,1,1,1,3), nrow=3,ncol=3)
xmat <- makeMatrix(A)
xmat$get()
xmat$getinv()
cacheinv(xmat)
xmat$getinv()
cacheinv(xmat)
rm(list=ls())
source("cachematrix.R")
A<-matrix(c(2,2,2,1,2,1,1,1,3), nrow=3,ncol=3)
xmat <- makeCacheMatrix(A)
xmat$get()
xmat$getinv()
cacheinv(xmat)
cacheinv(xmat)
xmat$getinv()
rm(list=ls())
xmat <- makeCacheMatrix(A)
rm(list=ls())
source("cachematrix.R")
xmat <- makeCacheMatrix(A)
xmat$getinv()
xmat$get()
rm(list=ls())
A<-matrix(c(2,2,2,1,2,1,1,1,3), nrow=3,ncol=3)
source("cachematrix.R")
xmat <- makeCacheMatrix(A)
xmat$get()
xmat$getinv()
cacheinv(xmat)
xmat$getinv()
rm(list=ls())
source("cachematrix.R")
A<-matrix(c(2,2,2,1,2,1,1,1,3), nrow=3,ncol=3)
A
xmat <- makeCacheMatrix(A)
cacheSolve(xmat)
cacheSolve(xmat)
xmat$getinv()
xmat$get()
rm(list=ls())
source("cachematrixPrep.R")
A<-matrix(c(2,2,2,1,2,1,1,1,3), nrow=3,ncol=3)
xmat <- makeCacheMatrix(A)
A<-matrix(c(2,2,2,1,2,1,1,1,9), nrow=3,ncol=3)
xmat$get()
cacheSolve(xmat)
A<-matrix(c(2,2,2,1,2,1,1,1,3), nrow=3,ncol=3)
xmat$get()
xmat$set(A)
xmat$get()
xmat$getinv()
xmat$setinv()
cacheSolve(xmat)
xmat$getinv()
xmat$get()
A<-matrix(c(2,2,2,1,2,1,1,1,9), nrow=3,ncol=3)
xmat$get()
A<-matrix(c(2,2,2,1,2,1,1,1,9\3), nrow=3,ncol=3)
A<-matrix(c(2,2,2,1,2,1,1,1,3), nrow=3,ncol=3)
xmat$get()
cacheSolve(xmat)
xmat$getinv()
A<-matrix(c(2,2,2,1,2,1,1,1,9), nrow=3,ncol=3)
xmat$getinv()
xmat$get()
xmat$set(A)
xmat$getinv()
rm(list=ls())
cd ..
setwd ("..")
dir()
setwd("week3prog")
dir()
setwd("ProgrammingAssignment2")
dir()
source("cachematrix.R")
A<-matrix(c(2,2,2,1,2,1,1,1,3), nrow=3,ncol=3)
xmat <- makeCacheMatrix(A)
xmat$get()
xmat$getinv()
cacheSolve(xmat)
cacheSolve(xmat)
dir()
rm(list=ls())
ls
ls()
dir()
source("cachematrix.R")
A<-matrix(c(2,2,2,1,2,1,1,1,3), nrow=3,ncol=3)
xmat <- makeCacheMatrix(A)
xmat$get()
xmat$getinv()
cacheSolve(xmat)
source("cachematrix.R")
A<-matrix(c(2,2,2,1,2,1,1,1,3), nrow=3,ncol=3)
xmat <- makeCacheMatrix(A)
xmat$getinv()
xmat$get()
cacheSolve(xmat)
